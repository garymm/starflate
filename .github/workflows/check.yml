name: check

on:
  push:
    branches: [master]
  pull_request:
    branches: ["*"]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain: [gcc, clang]
        feature: ["", asan, tsan, ubsan]

    steps:
      - uses: actions/checkout@v3

      - name: mount bazel cache
        uses: actions/cache@v3
        with:
          path: |
            "~/.cache/bazel_disk_cache"
            "~/.cache/bazel_install_base"
            "~/.cache/bazel_output_base"
            "~/.cache/bazel_repository_cache"
            "~/.cache/bazelisk"
          key: bazel-test-${{ matrix.toolchain }}-${{ matrix.feature }}

      - name: install libtinfo5
        # clang tools load libtinfo5 for color diagnostics but `ubuntu-latest`
        # runners already have `libtinfo.so.6` installed. We just create a
        # symlink since it's faster than installing libtinfo5.
        # https://github.com/circleci/circleci-images/issues/430#issuecomment-522602495
        run: |
          sudo ln -s /lib/x86_64-linux-gnu/libtinfo.so.6 /lib/x86_64-linux-gnu/libtinfo.so.5

      - run: |
          bazel \
            --bazelrc=.github/workflows/ci.bazelrc \
            test \
            --config=${{ matrix.toolchain }} \
            --features=${{ matrix.feature }} \
            //...

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: mount bazel cache
        uses: actions/cache@v3
        with:
          path: |
            "~/.cache/bazel_disk_cache"
            "~/.cache/bazel_install_base"
            "~/.cache/bazel_output_base"
            "~/.cache/bazel_repository_cache"
            "~/.cache/bazelisk"
          key: bazel-coverage

      - name: install libtinfo5
        # clang tools load libtinfo5 for color diagnostics but `ubuntu-latest`
        # runners already have `libtinfo.so.6` installed. We just create a
        # symlink since it's faster than installing libtinfo5.
        # https://github.com/circleci/circleci-images/issues/430#issuecomment-522602495
        run: |
          sudo ln -s /lib/x86_64-linux-gnu/libtinfo.so.6 /lib/x86_64-linux-gnu/libtinfo.so.5

      - run: |
          bazel \
            --bazelrc=.github/workflows/ci.bazelrc \
            coverage \
            --instrumentation_filter="-/:boost_ut" \
            //...

      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./bazel-out/_coverage/_coverage_report.dat
          fail_ci_if_error: true

  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        flag:
          - "--config=clang-format"
          - "--config=clang-tidy"
          - "--config=verbose-clang-tidy"
          - "--compilation_mode=opt"
        exclude:
          - flag: ${{ github.event_name == 'pull_request' && '--config=verbose-clang-tidy' || 'dummy' }}

    steps:
      - uses: actions/checkout@v3

      - name: mount bazel cache
        uses: actions/cache@v3
        with:
          path: |
            "~/.cache/bazel_disk_cache"
            "~/.cache/bazel_install_base"
            "~/.cache/bazel_output_base"
            "~/.cache/bazel_repository_cache"
            "~/.cache/bazelisk"
          key: bazel-build-${{ matrix.flag }}

      - name: install libtinfo5
        # clang tools load libtinfo5 for color diagnostics but `ubuntu-latest`
        # runners already have `libtinfo.so.6` installed. We just create a
        # symlink since it's faster than installing libtinfo5.
        # https://github.com/circleci/circleci-images/issues/430#issuecomment-522602495
        run: |
          sudo ln -s /lib/x86_64-linux-gnu/libtinfo.so.6 /lib/x86_64-linux-gnu/libtinfo.so.5

      - run: |
          bazel \
            --bazelrc=.github/workflows/ci.bazelrc \
            build \
            ${{ matrix.flag }} \
            //...

  buildifier:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: mount bazel cache
        uses: actions/cache@v3
        with:
          path: |
            "~/.cache/bazel_disk_cache"
            "~/.cache/bazel_install_base"
            "~/.cache/bazel_output_base"
            "~/.cache/bazel_repository_cache"
            "~/.cache/bazelisk"
          key: bazel-buildifier

      - run: |
          bazel \
            --bazelrc=.github/workflows/ci.bazelrc \
            run \
            //:buildifier.check
